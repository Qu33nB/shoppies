{"version":3,"sources":["SearchBar.js","Results.js","Nominations.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","marginBottom","width","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","toolbar","flexDirection","margin","SearchBar","classes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","minWidth","fontSize","pos","Results","Card","CardContent","gutterBottom","component","Button","size","bullet","transform","Nominations","App","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qTAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,aAAc,OACdC,MAAO,OAGTC,WAAY,CACVC,YAAaN,EAAMO,QAAQ,IAE7BC,MAAM,aACJC,QAAS,QACRT,EAAMU,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAQ,CACNC,SAAU,WACVC,aAAcd,EAAMe,MAAMD,aAC1BE,gBAAiBC,YAAKjB,EAAMkB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKjB,EAAMkB,QAAQC,OAAOC,MAAO,MAEpDd,YAAaN,EAAMO,QAAQ,GAC3Bc,WAAY,GAOdC,WAAY,CACVC,QAASvB,EAAMO,QAAQ,EAAG,GAC1BiB,OAAQ,OACRX,SAAU,WACVY,cAAe,OACfhB,QAAS,OACTiB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAY,CACVP,QAASvB,EAAMO,QAAQ,EAAG,EAAG,EAAG,GAEhCwB,YAAY,cAAD,OAAgB/B,EAAMO,QAAQ,GAA9B,OACXyB,WAAYhC,EAAMiC,YAAYC,OAAO,SACrC9B,MAAO,QAET+B,eAAe,aACb1B,QAAS,QACRT,EAAMU,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGb2B,cAAc,aACZ3B,QAAS,QACRT,EAAMU,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGb4B,QAAS,CACP5B,QAAS,OACT6B,cAAe,SACfC,OAAQ,cAIG,SAASC,IACtB,IAAMC,EAAU3C,IAgFhB,OACE,yBAAK4C,UAAWD,EAAQxC,MACtB,kBAAC0C,EAAA,EAAD,CAAQ9B,SAAS,UACf,kBAAC+B,EAAA,EAAD,CAASF,UAAWD,EAAQJ,SAC1B,kBAACQ,EAAA,EAAD,CAAYH,UAAWD,EAAQjC,MAAOsC,QAAQ,YAAYC,QAAM,GAAhE,eAGA,yBAAKL,UAAWD,EAAQ7B,QACtB,yBAAK8B,UAAWD,EAAQnB,YACtB,kBAAC,IAAD,OAEF,kBAAC0B,EAAA,EAAD,CACEC,YAAY,eACZR,QAAS,CACPS,KAAMT,EAAQb,UACduB,MAAOV,EAAQX,YAEjBsB,WAAY,CAAE,aAAc,gB,4BCxKpCtD,EAAYC,YAAW,CAC3BmD,KAAM,CACJG,SAAU,KAEZ7C,MAAO,CACL8C,SAAU,IAEZC,IAAK,CACHpD,aAAc,MAIH,SAASqD,IACtB,IAAMf,EAAU3C,IAGhB,OACE,kBAAC2D,EAAA,EAAD,CAAMf,UAAWD,EAAQS,MACvB,kBAACQ,EAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CAAYH,UAAWD,EAAQjC,MAAOqB,MAAM,UAAU8B,cAAY,GAAlE,kBASA,kBAACd,EAAA,EAAD,CAAYC,QAAQ,QAAQc,UAAU,MAAtC,eAEI,kBAACC,EAAA,EAAD,CAAQf,QAAQ,WAAWgB,KAAK,QAAQjC,MAAM,UAAUa,UAAWD,EAAQF,QAA3E,eC9BZ,IAAMzC,EAAYC,YAAW,CAC3BmD,KAAM,CACJG,SAAU,KAEZU,OAAQ,CACNtD,QAAS,eACT8B,OAAQ,QACRyB,UAAW,cAEbxD,MAAO,CACL8C,SAAU,IAEZC,IAAK,CACHpD,aAAc,MAIH,SAAS8D,IACpB,IAAMxB,EAAU3C,IAGd,OACE,kBAAC2D,EAAA,EAAD,CAAMf,UAAWD,EAAQS,MACvB,kBAACQ,EAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CAAYH,UAAWD,EAAQjC,MAAOqB,MAAM,UAAU8B,cAAY,GAAlE,eASA,kBAACd,EAAA,EAAD,CAAYC,QAAQ,QAAQc,UAAU,MAAtC,eAEI,kBAACC,EAAA,EAAD,CAAQf,QAAQ,WAAWgB,KAAK,QAAQjC,MAAM,UAAUa,UAAWD,EAAQF,QAA3E,aCFD2B,MAlCf,WAkBE,OACE,yBAAKxB,UAAU,OACb,4CACA,kBAACF,EAAD,MAGA,yBAAK2B,GAAG,aACN,kBAACX,EAAD,MACA,kBAACS,EAAD,OAPJ,OCbgBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3305cefa.chunk.js","sourcesContent":["import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    marginBottom: '30px',\n    width: '75%',\n    // justifyContent: 'center',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    // width: '100%',\n    // [theme.breakpoints.up('sm')]: {\n    //   marginLeft: theme.spacing(3),\n    //   width: '100%',\n    // },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(5)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0 auto'\n  },\n}));\n\nexport default function SearchBar() {\n  const classes = useStyles();\n//   const [anchorEl, setAnchorEl] = React.useState(null);\n//   const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n//   const isMenuOpen = Boolean(anchorEl);\n//   const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n//   const handleProfileMenuOpen = (event) => {\n//     setAnchorEl(event.currentTarget);\n//   };\n\n//   const handleMobileMenuClose = () => {\n//     setMobileMoreAnchorEl(null);\n//   };\n\n//   const handleMenuClose = () => {\n//     setAnchorEl(null);\n//     handleMobileMenuClose();\n//   };\n\n//   const handleMobileMenuOpen = (event) => {\n//     setMobileMoreAnchorEl(event.currentTarget);\n//   };\n\n//   const menuId = 'primary-search-account-menu';\n//   const renderMenu = (\n//     <Menu\n//       anchorEl={anchorEl}\n//       anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n//       id={menuId}\n//       keepMounted\n//       transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n//       open={isMenuOpen}\n//       onClose={handleMenuClose}\n//     >\n//       <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n//       <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n//     </Menu>\n//   );\n\n//   const mobileMenuId = 'primary-search-account-menu-mobile';\n//   const renderMobileMenu = (\n//     <Menu\n//       anchorEl={mobileMoreAnchorEl}\n//       anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n//       id={mobileMenuId}\n//       keepMounted\n//       transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n//       open={isMobileMenuOpen}\n//       onClose={handleMobileMenuClose}\n//     >\n//       <MenuItem>\n//         <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n//           <Badge badgeContent={4} color=\"secondary\">\n//             <MailIcon />\n//           </Badge>\n//         </IconButton>\n//         <p>Messages</p>\n//       </MenuItem>\n//       <MenuItem>\n//         <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n//           <Badge badgeContent={11} color=\"secondary\">\n//             <NotificationsIcon />\n//           </Badge>\n//         </IconButton>\n//         <p>Notifications</p>\n//       </MenuItem>\n//       <MenuItem onClick={handleProfileMenuOpen}>\n//         <IconButton\n//           aria-label=\"account of current user\"\n//           aria-controls=\"primary-search-account-menu\"\n//           aria-haspopup=\"true\"\n//           color=\"inherit\"\n//         >\n//         </IconButton>\n//         <p>Profile</p>\n//       </MenuItem>\n//     </Menu>\n//   );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <Typography className={classes.title} variant=\"subtitle1\" noWrap>\n            Movie Title\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      {/* {renderMobileMenu}\n      {renderMenu} */}\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Results() {\n  const classes = useStyles();\n//   const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"primary\" gutterBottom>\n          Results for \"\"\n        </Typography>\n        {/* <Typography variant=\"h5\" component=\"h2\">\n          be{bull}nev{bull}o{bull}lent\n        </Typography> */}\n        {/* <Typography className={classes.pos} color=\"textSecondary\">\n          adjective\n        </Typography> */}\n        <Typography variant=\"body2\" component=\"li\">\n            movie (1999)\n            <Button variant=\"outlined\" size=\"small\" color=\"primary\" className={classes.margin}>\n                Nominate\n            </Button>\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function Nominations() {\n    const classes = useStyles();\n    //   const bull = <span className={classes.bullet}>•</span>;\n    \n      return (\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography className={classes.title} color=\"primary\" gutterBottom>\n              Nominations\n            </Typography>\n            {/* <Typography variant=\"h5\" component=\"h2\">\n              be{bull}nev{bull}o{bull}lent\n            </Typography> */}\n            {/* <Typography className={classes.pos} color=\"textSecondary\">\n              adjective\n            </Typography> */}\n            <Typography variant=\"body2\" component=\"li\">\n                movie (1999)\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" className={classes.margin}>\n                    Remove\n                </Button>\n            </Typography>\n          </CardContent>\n        </Card>\n      );\n    }","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport Results from './Results';\nimport Nominations from './Nominations';\n\nfunction App() {\n\n  // const API_KEY = 'd797e60'\n  // const API_URL = `http://www.omdbapi.com/?s=${}&apikey=${API_KEY}`;\n\n  // const [movies, setMovies] = useState([]);\n\n  // useEffect(() => {\n  //   loadMovies();\n  // }, []);\n\n  // const loadMovies = async () => {\n  //   const res = await fetch(`http://www.omdbapi.com/?s=${}&apikey=${API_KEY}`)\n  //   const movies = await res.json();\n  //   setMovies(movies.hits);\n  //   console.log(movies.hits)\n  // }\n\n  return (\n    <div className=\"App\">\n      <h1>The Shoppies</h1>\n      <SearchBar />\n      {/* {\n        movies.map((m, id) => ( */}\n      <div id=\"container\">\n        <Results />\n        <Nominations />\n      </div>\n        ))\n      {/* } */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}